# Technology Setup
# Technology used is ASAP7
vlsi.core.technology: tsmc16
vlsi.core.technology_path: ["/home/jjthomas/hammer-tsmc16-plugin"]
technology.tsmc16.install_dir: "/tsmc16"
# Specify dir with ASAP7 tarball
# technology.asap7.tarball_dir: "/cad/asap7"
# Use install_dir, since we've already extracted tarball
#technology.asap7.install_dir: "/cad/asap7"


vlsi.core.max_threads: 12

# General Hammer Inputs

# Hammer will auto-generate a CPF for simple power designs; see hammer/src/hammer-vlsi/defaults.yml for more info
vlsi.inputs.power_spec_mode: "auto"
vlsi.inputs.power_spec_type: "cpf"

# Specify clock signals
vlsi.inputs.clocks: [
  {name: "clk", period: "2.3ns", uncertainty: "0.1ns"}
]

# Generate Make include to aid in flow 
vlsi.core.build_system: make

# Power Straps
par.power_straps_mode: generate
par.generate_power_straps_method: by_tracks
par.blockage_spacing: 2.0
par.generate_power_straps_options:
  by_tracks:
    strap_layers:
      - M7
      - M8
      - M9
    pin_layers:
      - M9
    track_width: 7 # minimum allowed for M2 & M3
    track_spacing: 0
    track_start: 10
    power_utilization: 0.05
    power_utilization_M8: 1.0
    power_utilization_M9: 1.0

# Placement Constraints
# For ASAP7, all numbers must be 4x larger than final GDS
vlsi.inputs.placement_constraints:
  - path: "Tile_PE"
    type: toplevel
    x: 0
    y: 0
    width: 300
    height: 300
    margins:
      left: 0
      right: 0
      top: 0
      bottom: 0
  - path: "Tile_PE/place_obs_bottom"
    type: obstruction
    obs_types: ["place"]
    x: 0
    y: 0
    width: 300
    height: 1.08 # 1 core site tall, necessary to avoid shorts

# Pin placement constraints
vlsi.inputs.pin_mode: generated
vlsi.inputs.pin.generate_mode: semi_auto
vlsi.inputs.pin.assignments: [
  {pins: "{SB_*_EAST_SB_IN_B1_0* SB_*_EAST_SB_OUT_B1[*] SB_*_EAST_SB_IN_B16_0* SB_*_EAST_SB_OUT_B16*}", layers: ["M5", "M7"], side: "right"},
  {pins: "{SB_*_SOUTH_SB_IN_B1_0* SB_*_SOUTH_SB_OUT_B1[*] SB_*_SOUTH_SB_IN_B16_0* SB_*_SOUTH_SB_OUT_B16* clk_out reset_out stall_out* config_out_config_* config_out_read* config_out_write* read_config_data[*]}", layers: ["M5", "M7"], side: "bottom"},
  {pins: "{SB_*_WEST_SB_IN_B1_0* SB_*_WEST_SB_OUT_B1[*] SB_*_WEST_SB_IN_B16_0* SB_*_WEST_SB_OUT_B16* tile_id* hi* lo*}", layers: ["M5", "M7"], side: "left"},
  {pins: "{SB_*_NORTH_SB_IN_B1_0* SB_*_NORTH_SB_OUT_B1[*] SB_*_NORTH_SB_IN_B16_0* SB_*_NORTH_SB_OUT_B16* clk reset stall* config_config_* config_read* config_write* read_config_data_in[*]}", layers: ["M5", "M7"], side: "top"}
]

# SRAM Compiler compiler options
vlsi.core.sram_generator_tool: "sram_compiler"
# You should specify a location for the SRAM generator in the tech plugin
vlsi.core.sram_generator_tool_path: []
vlsi.core.sram_generator_tool_path_meta: "append"

# Tool options. Replace with your tool plugin of choice.
# Genus options
vlsi.core.synthesis_tool: "genus"
vlsi.core.synthesis_tool_path: ["/home/jjthomas/chipyard/vlsi/hammer-cadence-plugins/synthesis"]
vlsi.core.synthesis_tool_path_meta: "append"
synthesis.genus.version: "17.21.000.lnx86"
synthesis.genus.genus_bin: "${cadence.cadence_home}/GENUS${synthesis.genus.version}/bin/genus"
# Innovus options
vlsi.core.par_tool: "innovus"
vlsi.core.par_tool_path: ["/home/jjthomas/chipyard/vlsi/hammer-cadence-plugins/par"]
vlsi.core.par_tool_path_meta: "append"
par.innovus.version: "17.12.000.lnx86"
par.innovus.innovus_bin: "${cadence.cadence_home}/INNOVUS${par.innovus.version}/bin/innovus"
par.innovus.design_flow_effort: "standard"
par.inputs.gds_merge: true
# Calibre options
vlsi.core.drc_tool: "calibre"
vlsi.core.drc_tool_path: ["hammer-mentor-plugins/drc"]
vlsi.core.lvs_tool: "calibre"
vlsi.core.lvs_tool_path: ["hammer-mentor-plugins/lvs"]
